import{R as p}from"./index-CTjT7uj6.js";import{E as m}from"./EntityRefLinks-Ddwb9R-w.js";import{e as s}from"./routes-Ct_8Xawb.js";import{w as n}from"./appWrappers-KUpkLAp6.js";import"./EntityRefLink-BRhzgDd6.js";import"./Link-GvJop_Qi.js";import"./index-Cqve-NHl.js";import"./lodash-CoGan1YB.js";import"./index-BbmHap-z.js";import"./index-CvMVCH8h.js";import"./ApiRef-BSBwTmJJ.js";import"./interopRequireDefault-BbjLfwJi.js";import"./createSvgIcon-BxRwmj-P.js";import"./capitalize-CDPu30qc.js";import"./defaultTheme-CzJIUhLY.js";import"./withStyles-Cy0w16fh.js";import"./hoist-non-react-statics.cjs-yZcCaz5O.js";import"./useControlled-BQlqYFiW.js";import"./createSvgIcon-ErQpyllY.js";import"./isMuiElement-Cb6QZSLO.js";import"./unstable_useId-B3Hiq1YI.js";import"./makeStyles-DFHNDtjR.js";import"./useAnalytics-DTrkS1Gy.js";import"./ConfigApi-DBUUc3nU.js";import"./Typography-DtBgvzFq.js";import"./useRouteRef-UNW_jnDS.js";import"./EntityDisplayName-DT80DqSd.js";import"./Box-4hiNbBw1.js";import"./typography-DzPlb7_1.js";import"./Tooltip-CVVhu75l.js";import"./useTheme-C1RDaILZ.js";import"./Popper-CCoBcT50.js";import"./Portal-CTbkfrAU.js";import"./Grow-CYgnIZj0.js";import"./utils-Vc_NgNiQ.js";import"./TransitionGroupContext-BtzQ-Cv7.js";import"./mapValues-uGpuQnk_.js";import"./toString-bNjqhuyi.js";import"./ref-8pKZtiZi.js";import"./MockTranslationApi-Bm0rhTQl.js";import"./index-CFaqwFgm.js";import"./classCallCheck-BNzALLS0.js";import"./inherits-Ax9O35oZ.js";import"./toArray-BIgjzDMT.js";import"./TranslationApi-eOxINumg.js";import"./WebStorage-D5Fgivzj.js";import"./useAsync-CXA3qup_.js";import"./useMountedState-DkESzBh4.js";import"./componentData-CM4hSmEF.js";import"./ApiProvider-CuNQiN7Z.js";import"./index-BRV0Se7Z.js";import"./CssBaseline-DDRFgeWI.js";import"./ThemeProvider-CVGcooNy.js";import"./jsx-runtime-Cw0GR0a5.js";import"./palettes-B20oCNII.js";const a={entityRefs:["component:default/playback","user:default/fname.lname"]},ft={title:"Catalog /EntityRefLinks",decorators:[r=>n(p.createElement(r,null),{mountedRoutes:{"/catalog/:namespace/:kind/:name":s}})]},t=r=>p.createElement(m,{...r});t.args=a;t.__docgenInfo={description:"",methods:[],displayName:"Default",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};var e,o,i;t.parameters={...t.parameters,docs:{...(e=t.parameters)==null?void 0:e.docs,source:{originalSource:"(args: EntityRefLinksProps<string | CompoundEntityRef>) => <EntityRefLinks {...args} />",...(i=(o=t.parameters)==null?void 0:o.docs)==null?void 0:i.source}}};const ct=["Default"];export{t as Default,ct as __namedExportsOrder,ft as default};
